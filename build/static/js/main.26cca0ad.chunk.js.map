{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","react_default","a","createElement","className","Fragment","placeholder","onChange","name","ref","onClick","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","index_esm","ti_index_esm","TodoList","setTodos","_console","test","newTodos","concat","toConsumableArray","console","log","apply","components_Todo","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.26cca0ad.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your task' value={input} onChange={handleChange} name='text' ref={inputRef} className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a task'value={input} onChange={handleChange} name='text' className='todo-input' ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add \r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Your's Todo!</h1>\r\n      <h2>Let's begin the day's schedule!!</h2>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}